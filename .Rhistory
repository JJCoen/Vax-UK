label = "Method 1") +
theme_minimal() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal')
# ggsave("./figures/method1-diff-avg.jpeg")
View(uk_mort)
#| include: false
#|
uk_pop <- readRDS(file = "./processed-data/uk-pop.rds") |>
setDT()
uk_dt <- uk_mort[, pop_count := uk_pop$pop_count]
uk_dt[, rate := mort_count/pop_count * 100000][, rate := floor(rate)]
View(uk_pop)
uk_dt <- uk_mort[, pop_count := uk_pop$count]
uk_mort[age_cat == "Under 1 year", mort_count, by = year]
age_0 <- uk_mort[age_cat == "Under 1 year", mort_count, by = year]
age_1 <- uk_mort[age_cat == "1-14", mort_count, by = year]
View(age_0)
age_0 <- uk_mort[age_cat == "Under 1 year", .(mort_count), by = year]
age_0 <- uk_mort[age_cat == "Under 1 year", mort_count, by = year][, mort_count]
age_1 <- uk_mort[age_cat == "1-14", mort_count, by = year][, mort_count]
age_1_14 <- uk_mort[age_cat == "1-14", mort_count, by = year][, mort_count]
age_0_14 <- age_0 + age_1_14
View(uk_mort)
uk_mort[ age_cat == "1-14", age_cat := age_0_14, by = year]
uk_mort[ age_cat == "1-14", age_cat , by = year]
num_0 <- uk_mort[age_cat == "Under 1 year", mort_count, by = year][, mort_count]
num_1_14 <- uk_mort[age_cat == "1-14", mort_count, by = year][, mort_count]
num_0_14 <- age_0 + age_1_14
uk_mort[ age_cat == "1-14", mort_count := num_0_14 , by = year]
uk_mort[ age_cat == "1-14", mort_count, by = year]
uk_mort[ age_cat == "1-14", "mort_count" := num_0_14, by = year]
uk_mort[ age_cat == "1-14", "mort_count" ]
uk_mort[ age_cat == "1-14", mort_count ]
uk_mort[ age_cat == "1-14", mort_count := num_0_14 ]
View(uk_mort)
num_0_14 <- num_0 + num_1_14
uk_mort[age_cat %in% c("1-14", "15-44", "45-64", "65-74",
"75-84", "85+"), ]
# remove "Under 1 year" group
uk_mort <- uk_mort[age_cat %in% c("1-14", "15-44", "45-64", "65-74",
"75-84", "85+"), ]
uk_dt <- uk_mort[, pop_count := uk_pop$count]
uk_dt[, rate := mort_count/pop_count * 100000][, rate := floor(rate)]
setcolorder(uk_dt, c("year", "age_cat", "mort_count", "pop_count", "rate"))
uk_dt |>
head() |>
gt()
# Calculate difference between yearly death rate and
# death rate for 2019
uk_xs_base <- uk_dt[year %in% 2020:2023, xs_diff := round(rate - base, 5)]
View(uk_dt)
# extract years 2020 to 2022
uk_xs_base <- uk_dt[year %in% 2020:2023, .(year, age_cat, rate)]
# Calculate difference between yearly death rate and
# death rate for 2019
uk_xs_base <- uk_xs_base[xs_diff := round(rate - base, 5)]
# Calculate difference between yearly death rate and
# death rate for 2019
uk_xs_base <- uk_xs_base[, xs_diff := round(rate - base, 5)]
# Set the base rate from year 2019 values
base <- irl_dt[year==2019, rate]
# Set the base rate from year 2019 values
base <- uk_dt[year==2019, rate]
# Create a baseline vector for the four years 2020 - 2023
base <- rep(base, 4)
# Calculate difference between yearly death rate and
# death rate for 2019
uk_xs_base <- uk_xs_base[, xs_diff := round(rate - base, 5)]
uk_xs_base |>
head() |>
gt()
str(uk_xs_base)
uk_xs_base[, year := as.factor(year)]
ggplot(data=uk_xs_base, aes(x=age_cat, y=xs_diff,
fill= year)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired") +
labs(
title ="75+ in 2022: only group with excess mortality",
subtitle = waiver(),
caption = "ONS Deaths Registered and NOMIS population, \nEngland and Wales",
x = "age category",
y = "death rate above baseline") +
#    annotate(geom = "text", x = "5-14", y = 150,
#             label = "Method 2A") +
theme_minimal() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal')
#| message: false
uk_xs_base[, year := as.factor(year)]
ggplot(data=uk_xs_base, aes(x=age_cat, y=xs_diff,
fill= year)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired") +
labs(
title ="spike in 85+ for 2020",
subtitle = waiver(),
caption = "ONS Deaths Registered and NOMIS population, \nEngland and Wales",
x = "age category",
y = "death rate above baseline") +
annotate(geom = "text", x = "1-14", y = 1750,
label = "Method 2A") +
theme_minimal() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal')
# ggsave("./figures/method2a-base-diff-cso.jpeg")
# extract years 2020 to 2022
uk_xs_base <- uk_dt[year %in% 2020:2023, .(year, age_cat, rate)]
# Calculate difference between yearly death rate and
# death rate for 2019 as a percentage
uk_xs_base <- uk_xs_base[, xs_diff := (rate - base)/base * 100]
uk_xs_base |>
head() |>
gt()
#| message: false
uk_xs_base[, year := as.factor(year)]
ggplot(data=uk_xs_base, aes(x=age_cat, y=xs_diff,
fill= year)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired") +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(
title ="spike in 85+ for 2020",
subtitle = waiver(),
caption = "ONS Deaths Registered and NOMIS population, \nEngland and Wales",
x = "age category",
y = "death rate above baseline") +
annotate(geom = "text", x = "1-14", y = 1750,
label = "Method 2A") +
theme_minimal() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal')
# ggsave("./figures/method2a-base-diff-cso.jpeg")
#| message: false
uk_xs_base[, year := as.factor(year)]
ggplot(data=uk_xs_base, aes(x=age_cat, y=xs_diff,
fill= year)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired") +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(
title ="spike in 85+ for 2020",
subtitle = waiver(),
caption = "ONS Deaths Registered and NOMIS population, \nEngland and Wales",
x = "age category",
y = "death rate above baseline") +
# annotate(geom = "text", x = "1-14", y = 1750,
#           label = "Method 2A") +
theme_minimal() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal')
# ggsave("./figures/method2a-base-diff-cso.jpeg")
#| message: false
uk_xs_base[, year := as.factor(year)]
ggplot(data=uk_xs_base, aes(x=age_cat, y=xs_diff,
fill= year)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired") +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(
title ="greater excess mortality in middle years",
subtitle = waiver(),
caption = "ONS Deaths Registered and NOMIS population, \nEngland and Wales",
x = "age category",
y = "death rate above baseline") +
# annotate(geom = "text", x = "1-14", y = 1750,
#           label = "Method 2A") +
theme_minimal() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal')
# ggsave("./figures/method2a-base-diff-cso.jpeg")
ggsave("./figures/method2a-base-diff-ons.jpeg")
#| message: false
#| # Set the base rate from year 2019 values
# Set the base rate from year 2019 values
base <- uk_dt[year==2019, rate]
# Create a baseline vector for the four years 2020 - 2023
base <- rep(base, 4)
# extract years 2020 to 2022
uk_xs_base <- uk_dt[year %in% 2020:2023, .(year, age_cat, rate)]
# Calculate difference between yearly death rate and
# death rate for 2019 as a percentage
uk_xs_base <- uk_xs_base[, xs_diff := (rate - base)/base * 100]
uk_xs_base |>
head() |>
gt()
#| message: false
uk_xs_base[, year := as.factor(year)]
ggplot(data=uk_xs_base, aes(x=age_cat, y=xs_diff,
fill= year)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired") +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(
title ="greater excess mortality in middle years",
subtitle = waiver(),
caption = "ONS Deaths Registered and NOMIS population, \nEngland and Wales",
x = "age category",
y = "death rate above baseline") +
# annotate(geom = "text", x = "1-14", y = 1750,
#           label = "Method 2A") +
theme_minimal() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal')
# ggsave("./figures/method2a-base-diff-ons.jpeg")
#| message: false
uk_xs_base[, year := as.factor(year)]
ggplot(data=uk_xs_base, aes(x=age_cat, y=xs_diff,
fill= year)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired") +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(
title ="greater excess mortality in middle years",
subtitle = waiver(),
caption = "ONS Deaths Registered and NOMIS population, \nEngland and Wales",
x = "age category",
y = "death rate above baseline") +
# annotate(geom = "text", x = "1-14", y = 1750,
#           label = "Method 2A") +
#  theme_minimal() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal')
# ggsave("./figures/method2a-base-diff-ons.jpeg")
#| message: false
uk_xs_base[, year := as.factor(year)]
ggplot(data=uk_xs_base, aes(x=age_cat, y=xs_diff,
fill= year)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired") +
scale_y_continuous(labels = scales::percent_format(scale = 1),
breaks=c(-5,0, 5, 10, 15)) +
labs(
title ="greater excess mortality in middle years",
subtitle = waiver(),
caption = "ONS Deaths Registered and NOMIS population, \nEngland and Wales",
x = "age category",
y = "death rate above baseline") +
# annotate(geom = "text", x = "1-14", y = 1750,
#           label = "Method 2A") +
theme_minimal() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal')
# ggsave("./figures/method2a-base-diff-ons.jpeg")
View(uk_dt)
uk_lin_fit <- uk_dt[ year %in% c(2010:2019), ]
View(uk_lin_fit)
# Visualize changes over time
g0 <- ggplot(uk_lin_fit[age_cat == "1-14", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 95,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("1 to 14 years")
g15 <- ggplot(uk_lin_fit[age_cat == "15-44", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 9,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("15 to 44 years")
g45 <- ggplot(uk_lin_fit[age_cat == "45-64", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 47,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("15 to 24 years")
g45 <- ggplot(uk_lin_fit[age_cat == "45-64", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 47,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("45 to 64 years")
g65 <- ggplot(uk_lin_fit[age_cat == "65-74", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 60,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("65 to 74 years")
g75 <- ggplot(uk_lin_fit[age_cat == "74-84", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 110,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("75 to 84 years")
g85 <- ggplot(uk_lin_fit[age_cat == "85+", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 250,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("85 years and over")
# Remove axis titles from all plots
g_all <- list(g0, g15, g45, g65, g75, g85) %>%
map(~.x + labs(x=NULL, y=NULL))
#| fig-height: 12
#| fig-width: 10
#| message: false
# plotmath expressions
yleft <- textGrob(expression(paste("deaths per 100,000")),
rot = 90, gp = gpar(fontsize = 20))
bottom <- textGrob("years", gp = gpar(fontsize = 20))
# Lay out plots
uni <- grid.arrange(grobs=g_all, ncol = 2, nrow = 3,
left = yleft, bottom = bottom)
# Visualize changes over time
g0 <- ggplot(uk_lin_fit[age_cat == "1-14", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 40,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("1 to 14 years")
g15 <- ggplot(uk_lin_fit[age_cat == "15-44", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 85,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("15 to 44 years")
g45 <- ggplot(uk_lin_fit[age_cat == "45-64", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 300,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("45 to 64 years")
g65 <- ggplot(uk_lin_fit[age_cat == "65-74", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 1200,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("65 to 74 years")
# stat_regline_equation(label.x = 2017, label.y = 110,
#     aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
g85 <- ggplot(uk_lin_fit[age_cat == "85+", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 10200,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("85 years and over")
# Remove axis titles from all plots
g_all <- list(g0, g15, g45, g65, g75, g85) %>%
map(~.x + labs(x=NULL, y=NULL))
#| fig-height: 12
#| fig-width: 10
#| message: false
# plotmath expressions
yleft <- textGrob(expression(paste("deaths per 100,000")),
rot = 90, gp = gpar(fontsize = 20))
bottom <- textGrob("years", gp = gpar(fontsize = 20))
# Lay out plots
uni <- grid.arrange(grobs=g_all, ncol = 2, nrow = 3,
left = yleft, bottom = bottom)
g75 <- ggplot(uk_lin_fit[age_cat == "75-84", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
# stat_regline_equation(label.x = 2017, label.y = 110,
#     aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("75 to 84 years")
# Remove axis titles from all plots
g_all <- list(g0, g15, g45, g65, g75, g85) %>%
map(~.x + labs(x=NULL, y=NULL))
#| fig-height: 12
#| fig-width: 10
#| message: false
# plotmath expressions
yleft <- textGrob(expression(paste("deaths per 100,000")),
rot = 90, gp = gpar(fontsize = 20))
bottom <- textGrob("years", gp = gpar(fontsize = 20))
# Lay out plots
uni <- grid.arrange(grobs=g_all, ncol = 2, nrow = 3,
left = yleft, bottom = bottom)
stat_regline_equation(label.x = 2017, label.y = 4300,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# Remove axis titles from all plots
g_all <- list(g0, g15, g45, g65, g75, g85) %>%
map(~.x + labs(x=NULL, y=NULL))
g75 <- ggplot(uk_lin_fit[age_cat == "75-84", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 4300,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("75 to 84 years")
# Remove axis titles from all plots
g_all <- list(g0, g15, g45, g65, g75, g85) %>%
map(~.x + labs(x=NULL, y=NULL))
#| fig-height: 12
#| fig-width: 10
#| message: false
# plotmath expressions
yleft <- textGrob(expression(paste("deaths per 100,000")),
rot = 90, gp = gpar(fontsize = 20))
bottom <- textGrob("years", gp = gpar(fontsize = 20))
# Lay out plots
uni <- grid.arrange(grobs=g_all, ncol = 2, nrow = 3,
left = yleft, bottom = bottom)
# Visualize changes over time
g0 <- ggplot(uk_lin_fit[age_cat == "1-14", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 37.5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("1 to 14 years")
g15 <- ggplot(uk_lin_fit[age_cat == "15-44", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 65,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("15 to 44 years")
g45 <- ggplot(uk_lin_fit[age_cat == "45-64", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 350,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("45 to 64 years")
g65 <- ggplot(uk_lin_fit[age_cat == "65-74", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 1300,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("65 to 74 years")
g85 <- ggplot(uk_lin_fit[age_cat == "85+", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 13000,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("85 years and over")
# Remove axis titles from all plots
g_all <- list(g0, g15, g45, g65, g75, g85) %>%
map(~.x + labs(x=NULL, y=NULL))
#| fig-height: 12
#| fig-width: 10
#| message: false
# plotmath expressions
yleft <- textGrob(expression(paste("deaths per 100,000")),
rot = 90, gp = gpar(fontsize = 20))
bottom <- textGrob("years", gp = gpar(fontsize = 20))
# Lay out plots
uni <- grid.arrange(grobs=g_all, ncol = 2, nrow = 3,
left = yleft, bottom = bottom)
g85 <- ggplot(uk_lin_fit[age_cat == "85+", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 14500,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("85 years and over")
