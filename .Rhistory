# Visualize changes over time
g0 <- ggplot(scot_lin_fit[age_cat == "0-14", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 38, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("0 to 14 years")
g15 <- ggplot(scot_lin_fit[age_cat == "15-24", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 50, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("15 to 24 years")
g25 <- ggplot(scot_lin_fit[age_cat == "25-49", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 160, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("25 to 49 years")
g50 <- ggplot(scot_lin_fit[age_cat == "50-59", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 540, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("50 to 59 years")
g60 <- ggplot(scot_lin_fit[age_cat == "60-69", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 1300, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("60 to 69 years")
g70 <- ggplot(scot_lin_fit[age_cat == "70-79", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 3400, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("70 to 79 years")
g80 <- ggplot(scot_lin_fit[age_cat == "80+", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 11400, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("80 years and over")
# Remove axis titles from all plots
g_all <- list(g0,g15, g25, g50, g60, g70, g80) %>%
map(~.x + labs(x=NULL, y=NULL))
#| fig-height: 14
#| fig-width: 12
#| message: false
# plotmath expressions
yleft <- textGrob(expression(paste("deaths per 100,000")),
rot = 90, gp = gpar(fontsize = 20))
bottom <- textGrob("years", gp = gpar(fontsize = 20))
# Lay out plots
uni <- grid.arrange(grobs=g_all, ncol = 2, nrow = 4,
left = yleft, bottom = bottom)
#save - generates g object
g <- arrangeGrob(g0,g15, g25, g50, g60, g70, g80, nrow=4)
#saves g
ggsave(file="./figures/linear_fit.jpeg", g)
# plotmath expressions
yleft <- textGrob(expression(paste("deaths per 100,000")),
rot = 90, gp = gpar(fontsize = 20))
bottom <- textGrob("years", gp = gpar(fontsize = 20))
# Lay out plots
uni <- grid.arrange(grobs=g_all, ncol = 2, nrow = 4,
left = yleft, bottom = bottom)
#| warning: false
#| fig-height: 12
scot_lin_fit <- scot_dt[ year %in% c(2010:2019), ]
# Visualize changes over time
g0 <- ggplot(scot_lin_fit[age_cat == "0-14", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 38, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("0 to 14 years")
g15 <- ggplot(scot_lin_fit[age_cat == "15-24", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 50, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("15 to 24 years")
g25 <- ggplot(scot_lin_fit[age_cat == "25-49", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 160, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("25 to 49 years")
g50 <- ggplot(scot_lin_fit[age_cat == "50-59", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 540, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("50 to 59 years")
g60 <- ggplot(scot_lin_fit[age_cat == "60-69", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 1300, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("60 to 69 years")
g70 <- ggplot(scot_lin_fit[age_cat == "70-79", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 3400, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("70 to 79 years")
g80 <- ggplot(scot_lin_fit[age_cat == "80+", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 11400, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("80 years and over")
# Remove axis titles from all plots
g_all <- list(g0,g15, g25, g50, g60, g70, g80) %>%
map(~.x + labs(x=NULL, y=NULL))
# plotmath expressions
yleft <- textGrob(expression(paste("deaths per 100,000")),
rot = 90, gp = gpar(fontsize = 20))
bottom <- textGrob("years", gp = gpar(fontsize = 20))
# Lay out plots
uni <- grid.arrange(grobs=g_all, ncol = 2, nrow = 4,
left = yleft, bottom = bottom)
#save - generates g object
g <- arrangeGrob(g0,g15, g25, g50, g60, g70, g80, nrow=4)
#saves g
ggsave(file="./figures/linear_fit.jpeg", g)
#| warning: false
#| fig-height: 12
scot_lin_fit <- scot_dt[ year %in% c(2010:2019), ]
# Visualize changes over time
g0 <- ggplot(scot_lin_fit[age_cat == "0-14", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2016, label.y = 38, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("0 to 14 years")
g15 <- ggplot(scot_lin_fit[age_cat == "15-24", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2016, label.y = 50, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("15 to 24 years")
g25 <- ggplot(scot_lin_fit[age_cat == "25-49", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2016, label.y = 160, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("25 to 49 years")
g50 <- ggplot(scot_lin_fit[age_cat == "50-59", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2016, label.y = 540, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("50 to 59 years")
g60 <- ggplot(scot_lin_fit[age_cat == "60-69", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2016, label.y = 1300, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("60 to 69 years")
g70 <- ggplot(scot_lin_fit[age_cat == "70-79", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2016, label.y = 3400, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("70 to 79 years")
g80 <- ggplot(scot_lin_fit[age_cat == "80+", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2016, label.y = 11400, size = 5,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("80 years and over")
# Remove axis titles from all plots
g_all <- list(g0,g15, g25, g50, g60, g70, g80) %>%
map(~.x + labs(x=NULL, y=NULL))
#| fig-height: 14
#| fig-width: 12
#| message: false
# plotmath expressions
yleft <- textGrob(expression(paste("deaths per 100,000")),
rot = 90, gp = gpar(fontsize = 20))
bottom <- textGrob("years", gp = gpar(fontsize = 20))
# Lay out plots
uni <- grid.arrange(grobs=g_all, ncol = 2, nrow = 4,
left = yleft, bottom = bottom)
#save - generates g object
g <- arrangeGrob(g0,g15, g25, g50, g60, g70, g80, nrow=4)
#saves g
ggsave(file="./figures/linear_fit.jpeg", g)
#| label: "check linear fit"
#| warning: false
#| fig-height: 12
uk_lin_fit <- uk_dt[ year %in% c(2010:2019), ]
#| include: false
#| label: load_libraries
library(data.table)
library(kableExtra)
library(gt)
library(tidyverse)
library(ggpubr)
library(grid)     # textGrob
library(gridExtra)
library(plotly)
library(janitor)
library(tidyr)
library(writexl)
library(cowplot)
library(purrr)
#| label: "excess over average"
uk_mort <- readRDS(file = "./processed-data/uk-mort.rds") |>
setDT()
setwd("~/MEGA/MEGAsync/Data_Scientist/Public-Sector/Vaccinations/Vax-UK")
#| include: false
#| label: load_libraries
library(data.table)
library(kableExtra)
library(gt)
library(tidyverse)
library(ggpubr)
library(grid)     # textGrob
library(gridExtra)
library(plotly)
library(janitor)
library(tidyr)
library(writexl)
library(cowplot)
library(purrr)
#| label: "excess over average"
uk_mort <- readRDS(file = "./processed-data/uk-mort.rds") |>
setDT()
uk_mort[, mort_count := count][, count := NULL]
# convert age categories to factor and specify levels
uk_mort[, age_cat := factor(age_cat,
levels = c("Under 1 year", "1-14",
"15-44", "45-64", "65-74",
"75-84", "85+"))]
# compute 5-year average
avg_vec <- uk_mort[year %in% 2015:2019,
floor(mean(mort_count)),
by = age_cat ][, V1]
# extract years 2020 to 2022
uk_mort_xs <- uk_mort[year %in% 2020:2023, .(year, age_cat, mort_count)]
# record percent excess compared to average
uk_mort_xs[, mort_xs := (mort_count-avg_vec)/avg_vec * 100,
by = year] |>
head(10) |>
gt()
#| message: false
#| label: "plot method 1"
uk_mort_xs[, year := factor(year)]
ggplot(uk_mort_xs, aes(x=age_cat, y=mort_xs,
fill= year)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired") +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(
title ="greater excess mortality in older groups",
subtitle = waiver(),
caption = "ONS Deaths Registered, England and Wales",
x = "age category",
y = "number of deaths above average") +
annotate(geom = "text", x = "Under 1 year", y = 10,
label = "Method 1") +
theme_minimal() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal')
# ggsave("./figures/method1-diff-avg.jpeg")
#| label: "combine under 1 yr into 1-14 yrs"
#|
num_0 <- uk_mort[age_cat == "Under 1 year",
mort_count, by = year][, mort_count]
num_1_14 <- uk_mort[age_cat == "1-14",
mort_count, by = year][, mort_count]
num_0_14 <- num_0 + num_1_14
uk_mort[ age_cat == "1-14", mort_count := num_0_14 ]
# remove "Under 1 year" group
uk_mort <- uk_mort[age_cat %in% c("1-14", "15-44", "45-64", "65-74",
"75-84", "85+"), ]
#| include: false
#| label: "mortality rates"
uk_pop <- readRDS(file = "./processed-data/uk-pop.rds") |>
setDT()
uk_dt <- uk_mort[, pop_count := uk_pop$count]
uk_dt[, rate := mort_count/pop_count * 100000][, rate := floor(rate)]
setcolorder(uk_dt, c("year", "age_cat", "mort_count", "pop_count", "rate"))
uk_dt |>
head() |>
gt()
#| label: "output to excel"
#|
# excess_table <- pivot_wider(uk_mort_xs[, .(year, age_cat, mort_xs)],
#             names_from = year,
#             values_from = mort_xs)
#
# write_xlsx(excess_table, path = "./processed-data/Table_10_excess_avg.xlsx")
# label: "excess over baseline"
# excess_base <- uk_dt[year %in% 2020:2022, .(year, age_cat, xs_base)]
#
# excess_table <- pivot_wider(excess_base, names_from = year,
#             values_from = xs_base)
#
# write_xlsx(excess_table, path = "./processed-data/Table_11_excess_base.xlsx")
#| message: false
#| label: "base rate for 2019"
# Set the base rate from year 2019 values
base <- uk_dt[year==2019, rate]
# Create a baseline vector for the four years 2020 - 2023
base <- rep(base, 4)
# extract years 2020 to 2022
uk_xs_base <- uk_dt[year %in% 2020:2023, .(year, age_cat, rate)]
# Calculate difference between yearly death rate and
# death rate for 2019 as a percentage
uk_xs_base <- uk_xs_base[, xs_diff := (rate - base)/base * 100]
uk_xs_base |>
head() |>
gt()
#| label: "excel again"
#|
# excess_diff <- uk_dt[year %in% 2020:2022, .(year, age_cat, xs_diff)]
#
# diff_table <- pivot_wider(excess_diff, names_from = year,              values_from = xs_diff)
# write_xlsx(diff_table, path = "./processed-data/Table_12_excess_diff.xlsx")
#| message: false
#| label: "plot Method 2A"
#|
uk_xs_base[, year := as.factor(year)]
ggplot(data=uk_xs_base, aes(x=age_cat, y=xs_diff,
fill= year)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired") +
scale_y_continuous(labels = scales::percent_format(scale = 1),
breaks=c(-5,0, 5, 10, 15)) +
labs(
title ="greater excess mortality in middle years",
subtitle = waiver(),
caption = "ONS Deaths Registered and NOMIS population, \nEngland and Wales",
x = "age category",
y = "death rate above baseline") +
annotate(geom = "text", x = "1-14", y = 15,
label = "Method 2A") +
theme_minimal() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal')
## ggsave("./figures/method2a-base-diff-ons.jpeg")
#| message: false
#|
# # Set the base rate from year 2019 values
# base <- EStat_dt[Year==2019, rate]
# # Create a baseline vector for the two years 2020 - 2021
# base <- rep(base, 2)
#
# # Calculate difference between yearly death rate and
# # death rate for 2019
# EStat_dt[Year %in% 2020:2021, xs_diff := round(rate - base, 5)]
#
# EStat_dt[Year %in% 2020:2021,] |>
#     head() |>
#     gt()
#| message: false
# ggplot(EStat_dt[Year %in% 2020:2021,],
#        aes(x=age_cat, y=xs_diff,
#                         fill= Year)) +
#   geom_bar(stat="identity", position=position_dodge())+
#   scale_fill_brewer(palette="Paired") +
#   labs(
#   title ="0-4 years: only group with excess mortality",
#   subtitle = waiver(),
#   caption = "ESTAT mortality by age dataset DEMO_MAGEC",
#   x = "age category",
#   y = "death rate above average") +
#   theme_minimal() +
#         annotate(geom = "text", x = "75+", y = 1300,
#              label = "Method 2A") +
#   theme(legend.position='top',
#         legend.justification='left',
#         legend.direction='horizontal')
# ggsave("./figures/method2a-base-diff-estat.jpeg")
#| label: "check linear fit"
#| warning: false
#| fig-height: 12
uk_lin_fit <- uk_dt[ year %in% c(2010:2019), ]
# Visualize changes over time
g0 <- ggplot(uk_lin_fit[age_cat == "1-14", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 37.5, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("1 to 14 years")
g15 <- ggplot(uk_lin_fit[age_cat == "15-44", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 65, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("15 to 44 years")
g45 <- ggplot(uk_lin_fit[age_cat == "45-64", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 350, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("45 to 64 years")
g65 <- ggplot(uk_lin_fit[age_cat == "65-74", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 1300, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("65 to 74 years")
g75 <- ggplot(uk_lin_fit[age_cat == "75-84", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 4300, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("75 to 84 years")
g85 <- ggplot(uk_lin_fit[age_cat == "85+", ],
aes(x = year, y = rate)) +
geom_point(size = 3, shape=10)+
geom_smooth(method = lm, se=FALSE) +
stat_regline_equation(label.x = 2017, label.y = 14500, size = 4,
aes(label =  paste(after_stat(rr.label), sep = "~~~~"))) +
# x-axis breaks for year from 2010 to 2022
scale_x_continuous(breaks = 2010:2019) +
ggtitle("85 years and over")
# Remove axis titles from all plots
g_all <- list(g0, g15, g45, g65, g75, g85) %>%
map(~.x + labs(x=NULL, y=NULL))
# plotmath expressions
yleft <- textGrob(expression(paste("deaths per 100,000")),
rot = 90, gp = gpar(fontsize = 20))
bottom <- textGrob("years", gp = gpar(fontsize = 20))
# Lay out plots
grid.arrange(grobs=g_all, ncol = 2, nrow = 3,
left = yleft, bottom = bottom)
